#===========================
# 容器相关设置
server:
  port: 8023
debug: false
#log4j2相关配置
logging:
  config: classpath:log4j2-spring.xml
#============================
# spring 组件相关设置
spring:
  application:
    name: spring-boot-learning
  jackson:
    date-format: 'yyyy-MM-dd HH:mm:ss'
  mvc:
    throw-exception-if-no-handler-found: true #告诉 SpringBoot 当出现 404 错误时, 直接抛出异常
  resources:
    add-mappings: false #告诉 SpringBoot 不要为我们工程中的资源文件建立映射
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/learning?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: root
    type: com.zaxxer.hikari.HikariDataSource  #数据源
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  redis:
    database: 0 #Redis数据库索引（默认为0）
    host: localhost # Redis服务器地址
    port: 6379  # Redis服务器端口
    password: root # Redis服务器连接密码（默认为空）
    timeout: 1000 #链接超时时间
  data:
    mongodb:
      database: test
      host: localhost
      port: 27017
      username: root
      password: root
  rabbitmq:
    addresses: localhost
    port: 5672
    username: guest
    password: guest
  cache:
    redis:
      use-key-prefix: true
      cache-null-values: false
  boot:
    admin:
      client:
        url: 'http://localhost:8013'  # 添加spring boot admin监控  Spring Boot Admin Server的URL
        username: admin
        password: admin   #监控中心服务端的用户名和密码
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848    #nacos注册中心地址
    sentinel:
      transport:
        dashboard: localhost:9090  #sentinel 工作台地址
        port: 8719       #默认8719端口 假如被占用会从8719开始依次加1扫描直到找到未被占用端口
      eager: true #取消Sentinel控制台懒加载
management:
  endpoints:
    web:
      exposure:
        include: "*"  # 放开所有端点
  endpoint:
    health:
      show-details: ALWAYS
#=============================
# ############################################# mybatis 配置文件 #######################################
#mybatis
mybatis-plus:
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.spring.boot.model
  #启动时是否检查 MyBatis XML 文件的存在，默认不检查
  checkConfigLocation: true
  global-config:
    db-config:
      idType: AUTO
      table-underline: true

#=============================
#jwt
jwt:
  header: Authorization
  secret: aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC91LzM2ODE4Njg
  expiration: 7200000  #2小时
  tokenHead: "Bearer "
#=============================
